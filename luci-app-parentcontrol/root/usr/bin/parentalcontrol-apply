#!/bin/sh

CONFIG=parentalcontrol
CHAIN=parentalcontrol
DEBUG=$(uci -q get $CONFIG.config.debug)
[ -z "$DEBUG" ] && DEBUG=1  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ

log() {
    [ "$DEBUG" -eq 1 ] && logger -t parentalcontrol "$1"
}

log "üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª —á–µ—Ä–µ–∑ nftables (inet raw)..."

# –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É inet raw, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
nft list table inet raw >/dev/null 2>&1 || nft add table inet raw

# –°–±—Ä–æ—Å —Ü–µ–ø–æ—á–∫–∏
nft flush chain inet raw $CHAIN 2>/dev/null
nft delete chain inet raw $CHAIN 2>/dev/null
nft add chain inet raw $CHAIN { type filter hook prerouting priority -300 \; }

CURRENT_DAY=$(date +%u)  # 1‚Äì7 (1=Mon, 7=Sun)
CURRENT_TIME=$(date +%H:%M)

log "üìÖ –¢–µ–∫—É—â–∏–π –¥–µ–Ω—å: $CURRENT_DAY, –≤—Ä–µ–º—è: $CURRENT_TIME"

i=0
rule_count=0

while uci get $CONFIG.@rule[$i] >/dev/null 2>&1; do
    rule_count=$((rule_count + 1))
    section="@rule[$i]"

    name=$(uci -q get $CONFIG.$section.name)
    enabled=$(uci -q get $CONFIG.$section.enabled)
    mac=$(uci -q get $CONFIG.$section.mac)
    ip=$(uci -q get $CONFIG.$section.ip)
    start=$(uci -q get $CONFIG.$section.start)
    end=$(uci -q get $CONFIG.$section.end)

    log "========================================"
    log "üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª–∞ [$i]: $name"
    log "üîç enabled: $enabled, mac: $mac, ip: $ip"
    log "üîç –≤—Ä–µ–º—è: $start - $end"

    [ "$enabled" -ne "1" ] && {
        log "‚è≠Ô∏è [$name] –æ—Ç–∫–ª—é—á–µ–Ω–æ"
        i=$((i + 1))
        continue
    }

    days_list=""
    j=0
    while day_val=$(uci -q get $CONFIG.$section.days[$j]); do
        days_list="$days_list $day_val"
        log "üìÖ –ù–∞–π–¥–µ–Ω –¥–µ–Ω—å [$j]: $day_val"
        j=$((j + 1))
    done

    [ -z "$days_list" ] && {
        days_raw=$(uci -q get $CONFIG.$section.days)
        log "üìÖ –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–Ω–µ–π: $days_raw"
        for day in $days_raw; do
            days_list="$days_list $day"
        done
    }

    log "üìÖ [$name] –¥–Ω–∏ –ø—Ä–∞–≤–∏–ª–∞:$days_list"

    day_match=0
    for day in $days_list; do
        case "$day" in
            mon) [ "$CURRENT_DAY" -eq 1 ] && day_match=1 ;;
            tue) [ "$CURRENT_DAY" -eq 2 ] && day_match=1 ;;
            wed) [ "$CURRENT_DAY" -eq 3 ] && day_match=1 ;;
            thu) [ "$CURRENT_DAY" -eq 4 ] && day_match=1 ;;
            fri) [ "$CURRENT_DAY" -eq 5 ] && day_match=1 ;;
            sat) [ "$CURRENT_DAY" -eq 6 ] && day_match=1 ;;
            sun) [ "$CURRENT_DAY" -eq 7 ] && day_match=1 ;;
        esac
        [ "$day_match" -eq 1 ] && break
    done

    log "üìÖ [$name] —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–Ω—è: $day_match (—Å–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å ‚Ññ$CURRENT_DAY)"

    [ "$day_match" -eq 0 ] && {
        log "‚è≠Ô∏è [$name] –¥–µ–Ω—å –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç"
        i=$((i + 1))
        continue
    }

    log "üìÖ [$name] –¥–µ–Ω—å —Å–æ–≤–ø–∞–¥–∞–µ—Ç ‚Üí OK"

    time_in_range() {
        local now="$1" from="$2" to="$3"
        local now_min from_min to_min

        now_min=$(echo "$now" | awk -F: '{ print $1 * 60 + $2 }')
        from_min=$(echo "$from" | awk -F: '{ print $1 * 60 + $2 }')
        to_min=$(echo "$to" | awk -F: '{ print $1 * 60 + $2 }')

        log "‚è±Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: now=$now_min ($now), from=$from_min ($from), to=$to_min ($to)"

        if [ "$from_min" -le "$to_min" ]; then
            [ "$now_min" -ge "$from_min" ] && [ "$now_min" -lt "$to_min" ]
        else
            [ "$now_min" -ge "$from_min" ] || [ "$now_min" -lt "$to_min" ]
        fi
    }

    if ! time_in_range "$CURRENT_TIME" "$start" "$end"; then
        log "‚è≠Ô∏è [$name] –≤—Ä–µ–º—è $CURRENT_TIME –≤–Ω–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ $start‚Äì$end"
        i=$((i + 1))
        continue
    fi

    log "‚è∞ [$name] –≤—Ä–µ–º—è $CURRENT_TIME ‚àà $start‚Äì$end ‚Üí OK"

    [ -z "$mac" ] && [ -z "$ip" ] && {
        log "‚è≠Ô∏è [$name] –Ω–∏ MAC, –Ω–∏ IP –Ω–µ —É–∫–∞–∑–∞–Ω—ã"
        i=$((i + 1))
        continue
    }

    log "‚úÖ [$name] –ø—Ä–∞–≤–∏–ª–æ –∞–∫—Ç–∏–≤–Ω–æ, –ø—Ä–∏–º–µ–Ω—è–µ–º..."

    [ -n "$mac" ] && {
        log "üìé [$name] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞: MAC ‚Üí $mac"
        nft add rule inet raw $CHAIN ether saddr $mac drop
    }

    [ -n "$ip" ] && {
        log "üìé [$name] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞: IP ‚Üí $ip"
        nft add rule inet raw $CHAIN ip saddr $ip drop
    }

    log "========================================"
    i=$((i + 1))
done

log "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ $rule_count –ø—Ä–∞–≤–∏–ª. –¶–µ–ø–æ—á–∫–∞ nftables:"
nft list chain inet raw $CHAIN | while read line; do log "$line"; done

