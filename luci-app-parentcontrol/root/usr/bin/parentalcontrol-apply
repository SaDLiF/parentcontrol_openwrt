#!/bin/sh

CONFIG=parentalcontrol
CHAIN=parentalcontrol
DEBUG=$(uci -q get $CONFIG.config.debug)
[ -z "$DEBUG" ] && DEBUG=1  # –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤–∫–ª—é—á–µ–Ω–æ

log() {
    [ "$DEBUG" -eq 1 ] && logger -t parentalcontrol "$1"
}

log "üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –ø—Ä–∞–≤–∏–ª —á–µ—Ä–µ–∑ nftables (inet raw)..."

# –°–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É inet raw, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
nft list table inet raw >/dev/null 2>&1 || nft add table inet raw

# –°–±—Ä–æ—Å —Ü–µ–ø–æ—á–∫–∏
nft flush chain inet raw $CHAIN 2>/dev/null
nft delete chain inet raw $CHAIN 2>/dev/null
nft add chain inet raw $CHAIN { type filter hook prerouting priority -300 \; }

i=0
rule_count=0

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–∞–≤–∏–ª–∞
is_rule_active() {
    local start="$1"
    local end="$2"
    local days_list="$3"   # —Å–ø–∏—Å–æ–∫ –¥–Ω–µ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä: mon tue wed
    local now_day=$(date +%u)  # 1‚Äì7 (1=Mon, 7=Sun)
    local now_time=$(date +%H:%M)

    local now_min start_min end_min
    now_min=$(echo "$now_time" | awk -F: '{print $1*60+$2}')
    start_min=$(echo "$start" | awk -F: '{print $1*60+$2}')
    end_min=$(echo "$end" | awk -F: '{print $1*60+$2}')

    local today_match=0
    local yesterday_match=0
    local day

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–≤–ø–∞–¥–∞–µ—Ç –ª–∏ –¥–µ–Ω—å —Å –¥–Ω–µ–º –ø—Ä–∞–≤–∏–ª–∞
    for day in $days_list; do
        case "$day" in
            mon) [ "$now_day" -eq 1 ] && today_match=1 ;;
            tue) [ "$now_day" -eq 2 ] && today_match=1 ;;
            wed) [ "$now_day" -eq 3 ] && today_match=1 ;;
            thu) [ "$now_day" -eq 4 ] && today_match=1 ;;
            fri) [ "$now_day" -eq 5 ] && today_match=1 ;;
            sat) [ "$now_day" -eq 6 ] && today_match=1 ;;
            sun) [ "$now_day" -eq 7 ] && today_match=1 ;;
        esac
    done

    # –ï—Å–ª–∏ –Ω–æ—á–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ, –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –¥–µ–Ω—å
    if [ "$start_min" -gt "$end_min" ]; then
        local prev_day=$((now_day - 1))
        [ "$prev_day" -eq 0 ] && prev_day=7
        for day in $days_list; do
            case "$day" in
                mon) [ "$prev_day" -eq 1 ] && yesterday_match=1 ;;
                tue) [ "$prev_day" -eq 2 ] && yesterday_match=1 ;;
                wed) [ "$prev_day" -eq 3 ] && yesterday_match=1 ;;
                thu) [ "$prev_day" -eq 4 ] && yesterday_match=1 ;;
                fri) [ "$prev_day" -eq 5 ] && yesterday_match=1 ;;
                sat) [ "$prev_day" -eq 6 ] && yesterday_match=1 ;;
                sun) [ "$prev_day" -eq 7 ] && yesterday_match=1 ;;
            esac
        done
    fi

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    if [ "$start_min" -le "$end_min" ]; then
        # –æ–±—ã—á–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ
        [ "$today_match" -eq 1 ] && [ "$now_min" -ge "$start_min" ] && [ "$now_min" -lt "$end_min" ] && return 0
    else
        # –Ω–æ—á–Ω–æ–µ –ø—Ä–∞–≤–∏–ª–æ
        # 1) —Å —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è: start_min‚Äì23:59
        [ "$today_match" -eq 1 ] && [ "$now_min" -ge "$start_min" ] && return 0
        # 2) —Å –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –¥–Ω—è: 00:00‚Äìend_min
        [ "$yesterday_match" -eq 1 ] && [ "$now_min" -lt "$end_min" ] && return 0
    fi

    return 1
}

while uci get $CONFIG.@rule[$i] >/dev/null 2>&1; do
    rule_count=$((rule_count + 1))
    section="@rule[$i]"

    name=$(uci -q get $CONFIG.$section.name)
    enabled=$(uci -q get $CONFIG.$section.enabled)
    mac=$(uci -q get $CONFIG.$section.mac)
    ip=$(uci -q get $CONFIG.$section.ip)
    start=$(uci -q get $CONFIG.$section.start)
    end=$(uci -q get $CONFIG.$section.end)

    log "========================================"
    log "üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∞–≤–∏–ª–∞ [$i]: $name"
    log "üîç enabled: $enabled, mac: $mac, ip: $ip"
    log "üîç –≤—Ä–µ–º—è: $start - $end"

    [ "$enabled" -ne "1" ] && {
        log "‚è≠Ô∏è [$name] –æ—Ç–∫–ª—é—á–µ–Ω–æ"
        i=$((i + 1))
        continue
    }

    # –°–±–æ—Ä –¥–Ω–µ–π
    days_list=""
    j=0
    while day_val=$(uci -q get $CONFIG.$section.days[$j]); do
        days_list="$days_list $day_val"
        j=$((j + 1))
    done
    [ -z "$days_list" ] && days_list=$(uci -q get $CONFIG.$section.days)

    if ! is_rule_active "$start" "$end" "$days_list"; then
        log "‚è≠Ô∏è [$name] –ø—Ä–∞–≤–∏–ª–æ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ —Å–µ–π—á–∞—Å"
        i=$((i + 1))
        continue
    fi

    log "‚úÖ [$name] –ø—Ä–∞–≤–∏–ª–æ –∞–∫—Ç–∏–≤–Ω–æ, –ø—Ä–∏–º–µ–Ω—è–µ–º..."

    [ -n "$mac" ] && {
        log "üìé [$name] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞: MAC ‚Üí $mac"
        nft add rule inet raw $CHAIN ether saddr $mac drop
    }

    [ -n "$ip" ] && {
        log "üìé [$name] –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª–∞: IP ‚Üí $ip"
        nft add rule inet raw $CHAIN ip saddr $ip drop
    }

    log "========================================"
    i=$((i + 1))
done

log "‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ $rule_count –ø—Ä–∞–≤–∏–ª. –¶–µ–ø–æ—á–∫–∞ nftables:"
nft list chain inet raw $CHAIN | while read line; do log "$line"; done